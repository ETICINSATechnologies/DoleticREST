<?php

namespace KernelBundle\Repository;

use Doctrine\ORM\Query\Expr\Join;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends DoleticRepository
{
    public function findPresident()
    {
        $presidentPosition = $this->getEntityManager()->getRepository('KernelBundle:Position')->findOneBy(['president' => true]);
        if (isset($presidentPosition)) {
            $userPosition = $this->getEntityManager()->getRepository('KernelBundle:UserPosition')
                ->findOneBy(
                    [
                        'position' => $presidentPosition,
                        'active' => true,
                        'main' => true
                    ],
                    [
                        'startDate' => 'ASC'
                    ]
                );
            return isset($userPosition) ? $userPosition->getUser() : null;
        }
        return null;
    }

    public function findTreasurer()
    {
        $treasurerPosition = $this->getEntityManager()->getRepository('KernelBundle:Position')->findOneBy(['treasurer' => true]);
        if (isset($treasurerPosition)) {
            $userPosition = $this->getEntityManager()->getRepository('KernelBundle:UserPosition')
                ->findOneBy(
                    [
                        'position' => $treasurerPosition,
                        'active' => true,
                        'main' => true
                    ],
                    [
                        'startDate' => 'ASC'
                    ]
                );
            return isset($userPosition) ? $userPosition->getUser() : null;
        }
        return null;
    }

    public function findUsersByOld($old)
    {
        $qb = $this->createQueryBuilder('q');
        $qb->select('u')
            ->from($this->getClassName(), 'u', 'u.id')
            ->where($qb->expr()->eq('u.enabled', true))
            ->join('u.positions', 'up')
            ->join('up.position', 'p', Join::WITH, $qb->expr()->eq('p.old', $old ? 1 : 0));
        return $qb->getQuery()->getResult();
    }
}
